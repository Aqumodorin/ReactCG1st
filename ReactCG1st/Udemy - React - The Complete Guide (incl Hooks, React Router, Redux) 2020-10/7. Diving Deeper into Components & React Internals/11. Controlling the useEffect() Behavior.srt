1
00:00:02,290 --> 00:00:06,550
Now useEffect can be tricky to use though because right now, it runs all the time,

2
00:00:06,550 --> 00:00:09,840
it combines componentDidMount and componentDidUpdate.

3
00:00:09,880 --> 00:00:15,520
Now what if we were to send an HTTP request here but we only want to do that when the component is rendered

4
00:00:15,520 --> 00:00:19,300
for the first time and not for every re-render cycle,

5
00:00:19,300 --> 00:00:23,140
what would we do then? To highlight this problem,

6
00:00:23,140 --> 00:00:29,410
let's add a set timeout call here and maybe add a timeout of one second and after one second, this function will

7
00:00:29,410 --> 00:00:34,260
execute and I'm just doing this to kind of fake an HTTP request here.

8
00:00:34,270 --> 00:00:39,190
This is of course no HTTP request but it takes some time to finish and then does something and what it

9
00:00:39,190 --> 00:00:44,530
does here is it should throw an alert, saved data to cloud.

10
00:00:44,530 --> 00:00:48,730
Now we might be fine with that alert showing when we really saved something to the cloud,

11
00:00:48,730 --> 00:00:56,020
so when this component loaded for example or maybe we fetched data from the cloud, doesn't matter. So therefore, 

12
00:00:56,080 --> 00:00:58,410
we would be fine with seeing this if we reload,

13
00:00:58,420 --> 00:00:59,290
OK

14
00:00:59,410 --> 00:01:02,410
and now I click here and yes, I get this again,

15
00:01:02,440 --> 00:01:09,150
thank you. And I click here and I want to delete something and I get this again.

16
00:01:09,150 --> 00:01:11,560
Now this might not be what I want,

17
00:01:11,560 --> 00:01:14,440
how can I control when this actually executes?

18
00:01:14,440 --> 00:01:18,400
For example let's say this should only execute because it is saving data to the cloud

19
00:01:18,400 --> 00:01:23,020
when our persons changed but not on any other condition.

20
00:01:23,020 --> 00:01:29,650
Well for that, you can add a second argument here to useEffect, that second argument is an array where

21
00:01:29,650 --> 00:01:38,350
you simply point at all the variables or all the data that actually are used in your effect. Right now

22
00:01:38,350 --> 00:01:43,060
React is not smart enough to find out on its own and actually here it couldn't because we're not using

23
00:01:43,060 --> 00:01:44,150
any data in here

24
00:01:44,260 --> 00:01:48,640
but if we know, we only want to run this code when our persons changed,

25
00:01:48,790 --> 00:01:52,690
well then you simply add props persons here.

26
00:01:53,010 --> 00:01:58,480
Now by the way if you have different effects that depend on different data, you can use useEffect more

27
00:01:58,480 --> 00:01:58,990
than once,

28
00:01:58,990 --> 00:02:00,130
that is absolutely fine,

29
00:02:00,130 --> 00:02:04,850
you can have as many useEffect setups here or functions as you want.

30
00:02:04,900 --> 00:02:12,560
So now this effect should only execute when our persons changed. So if I reload this, it runs initially

31
00:02:12,770 --> 00:02:14,130
and if I toggle my persons

32
00:02:14,150 --> 00:02:18,400
now, there is no alert because persons didn't change.

33
00:02:18,500 --> 00:02:23,710
If I type an I, I of course get it again because that changes my persons.

34
00:02:23,720 --> 00:02:29,110
If I toggle persons, it does not come again because that didn't change my persons.

35
00:02:29,150 --> 00:02:36,820
So that is already an improvement, it allows us to control when this executes which is very useful.

36
00:02:36,880 --> 00:02:42,320
What if we now only want to execute this when the component renders the first time?

37
00:02:42,730 --> 00:02:50,330
Well for this, there is a little shortcut so to say, you can pass an empty array,

38
00:02:50,560 --> 00:02:53,290
you have to pass an array, that's important but it's empty.

39
00:02:53,290 --> 00:03:00,010
This tells React this effect has no dependencies and it should rerun whenever one of the dependencies

40
00:03:00,010 --> 00:03:01,000
changes.

41
00:03:01,000 --> 00:03:06,070
Now if you have no dependencies, they can never change and therefore this can never rerun, it will run

42
00:03:06,070 --> 00:03:07,120
for the first time,

43
00:03:07,120 --> 00:03:10,260
that is the default but it will never run again.

44
00:03:10,270 --> 00:03:16,310
So now therefore, we get this initially but thereafter we can do whatever we want

45
00:03:16,450 --> 00:03:17,910
and this does not come back.

46
00:03:17,920 --> 00:03:24,190
So if you just need componentDidMount, you would use useEffect with an empty array passed as a second

47
00:03:24,220 --> 00:03:32,130
argument to the useEffect function. If you have a dependency on a certain field, you do what we did before,

48
00:03:32,280 --> 00:03:33,730
you pass that field in here

49
00:03:33,870 --> 00:03:37,170
and of course, you can have multiple fields you will depend on.
