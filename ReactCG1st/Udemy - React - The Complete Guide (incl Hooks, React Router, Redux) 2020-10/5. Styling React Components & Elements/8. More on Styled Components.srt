1
00:00:02,390 --> 00:00:05,880
No style components are nice but how do they actually work.

2
00:00:05,990 --> 00:00:09,590
Which magic trick are they doing.

3
00:00:09,590 --> 00:00:14,090
Well for that let's inspect this in the developer tools.

4
00:00:14,100 --> 00:00:20,680
What we see there if we expect these rendered deaths is that they have CSF classes attached to them.

5
00:00:20,870 --> 00:00:28,490
Classes with very strange names which we certainly didn't define these class names are automatically

6
00:00:28,580 --> 00:00:34,310
added by the styled components library because keep in mind that these deaths here are actually the

7
00:00:34,310 --> 00:00:36,170
output of this death method.

8
00:00:36,230 --> 00:00:36,670
Right.

9
00:00:36,710 --> 00:00:38,080
We're not rendering a death.

10
00:00:38,090 --> 00:00:43,220
We're rendering a style they have here which is the result of calling the dev method here and the end

11
00:00:43,400 --> 00:00:46,170
with this tact template notation.

12
00:00:46,250 --> 00:00:54,020
So this diff method returns a react component which the end renders a regular death a regular div with

13
00:00:54,110 --> 00:00:55,720
such a C as as class.

14
00:00:56,090 --> 00:00:58,910
And where's the content of this class coming from.

15
00:00:58,910 --> 00:01:07,670
Well we can see that in the head of this document there we will see a style tag or multiple style tax

16
00:01:07,670 --> 00:01:08,750
actually.

17
00:01:08,750 --> 00:01:15,230
And if we have a look at these style text this style take here specifically with these attributes here

18
00:01:15,830 --> 00:01:18,540
we see there's this strange class name again.

19
00:01:18,540 --> 00:01:22,700
A day later we find the styles we set up here.

20
00:01:22,730 --> 00:01:29,930
So the styles we set up here are not added as inline styles but instead the style components package

21
00:01:30,170 --> 00:01:37,430
takes them puts them in to see us as class selectors and adds them to the head of document and then

22
00:01:37,430 --> 00:01:45,110
just adds the appropriate CSO as class to the div which is returned by this component or which is created

23
00:01:45,170 --> 00:01:47,020
as part of this component.

24
00:01:47,030 --> 00:01:52,670
This is how style components work under the hood which is great because that means you're not working

25
00:01:52,670 --> 00:01:56,660
with inline styles which can have certain disadvantages.

26
00:01:56,660 --> 00:02:01,940
For example you're not really taking advantage of the cascading nature of C.S. s with them.

27
00:02:02,000 --> 00:02:02,330
No.

28
00:02:02,330 --> 00:02:08,750
Instead you have regular C as his classes automatically managed for you by style components which makes

29
00:02:08,750 --> 00:02:11,140
this a really great solution.

30
00:02:11,300 --> 00:02:15,860
Let's also applied to app GST offer in app J.S..

31
00:02:16,070 --> 00:02:21,960
We also have some styles here which we previously added with radium just as we did it in person.

32
00:02:21,960 --> 00:02:28,100
J.S. There by the way we can also get rid of that style constant here we don't need it anymore.

33
00:02:28,250 --> 00:02:31,240
We've styled components but an app has it's the same.

34
00:02:31,240 --> 00:02:33,220
We got this style constitution.

35
00:02:33,230 --> 00:02:37,280
We don't need it anymore like this because we're not using radium anymore.

36
00:02:37,280 --> 00:02:41,890
Now this style constant here is important for our button.

37
00:02:41,930 --> 00:02:45,190
So in the end what we want to create is a stalled button right.

38
00:02:45,410 --> 00:02:50,950
Now again we can do this with the stalled components package and side note of course you can all the

39
00:02:50,960 --> 00:02:56,510
story your style components in separate files and then reuse them across multiple files if you need

40
00:02:56,510 --> 00:03:02,840
to hear I just happen to only need that Dave and this person component and that button in the app component

41
00:03:02,960 --> 00:03:06,530
but you could absolutely share them across files.

42
00:03:06,530 --> 00:03:12,230
So here I am importing style from styled components again and with that I want to create my style.

43
00:03:12,230 --> 00:03:17,120
Button so here I'll have my style button.

44
00:03:17,120 --> 00:03:20,540
Of course you can name this constant however you want and there.

45
00:03:20,600 --> 00:03:27,940
I created with styled button like this again using this tact template syntax here.

46
00:03:27,950 --> 00:03:39,250
Now here we have our style which we can copy in that style constant and added here in our template literal.

47
00:03:39,600 --> 00:03:45,660
Now we don't need the quotes here because we're writing regular C.S. s here.

48
00:03:45,660 --> 00:03:46,380
That's important.

49
00:03:46,380 --> 00:03:48,380
You write regular C.S. s here.

50
00:03:48,480 --> 00:03:52,970
So you'd also need to use regular CSA as properties.

51
00:03:53,100 --> 00:03:58,920
You're not using camel case here anymore because of what you write in your will end up in the head of

52
00:03:58,920 --> 00:04:02,210
your document between style tax as you saw before.

53
00:04:02,220 --> 00:04:10,440
So we write regular C as s here we don't need to adhere to any special javascript syntax here because

54
00:04:10,440 --> 00:04:18,540
it's just C.S. s so let's add semicolons at the end of every line remove all quotes and get rid of all

55
00:04:18,540 --> 00:04:20,640
camel case notations.

56
00:04:20,640 --> 00:04:27,000
Now the cool thing about style components is you can just add a hover a pseudo selector like this with

57
00:04:27,000 --> 00:04:28,000
a little tweak.

58
00:04:28,050 --> 00:04:33,390
You need to add Ampersand symbol in front of it and this will tell the style components package that

59
00:04:33,390 --> 00:04:39,390
this belongs to this button which is spread out and that there it should apply it hover style.

60
00:04:39,630 --> 00:04:47,850
Or be aware of this hover style that here we have the background color light green like that and the

61
00:04:47,850 --> 00:04:50,130
color black like this.

62
00:04:50,130 --> 00:04:55,620
So this is how we would translate this to regular CSA as applied to this button which is created by

63
00:04:55,620 --> 00:04:55,840
this.

64
00:04:55,850 --> 00:05:00,690
Button method in the end and now we can use that stop button.

65
00:05:00,690 --> 00:05:07,990
So let's go down here and let's replace our button here with styled button.

66
00:05:08,040 --> 00:05:10,930
Now important we don't apply to inline style like this anymore.

67
00:05:11,010 --> 00:05:16,740
We can still add on click though because this button component which is created by the style components

68
00:05:16,740 --> 00:05:20,350
package has all the normal props every button has.

69
00:05:20,430 --> 00:05:24,310
So on click ends on are still available there.

70
00:05:24,420 --> 00:05:31,380
If we now save that and we reload we still see the button here and you see the hovering fact when I

71
00:05:31,380 --> 00:05:36,540
will hover over it and just to again prove that this is coming from the style components.

72
00:05:36,630 --> 00:05:44,360
If I were to temporarily remove that hover code here you see now I have no hover effect here.

73
00:05:44,400 --> 00:05:47,990
So that's really style components doing their work.

74
00:05:48,030 --> 00:05:49,110
Let's reactive though.
